package com.pinsheng.app;

import java.util.ArrayList;
import java.util.List;

import com.baidu.mapapi.SDKInitializer;
import com.google.gson.Gson;
import com.google.gson.reflect.TypeToken;
import com.pinsheng.mode.Person;
import com.pinsheng.service.HelpService;
import com.pinsheng.util.Util;

import android.app.Application;
import android.content.Intent;
import android.content.SharedPreferences;

/**
 * 重写Application
 */
public class HELPApllication extends Application {

	private boolean isShakeOpen;
	private List<Person> persons;
	private SharedPreferences sp;
	private String location;
	private double weidu;
	private double jingdu;

	public double getWeidu() {
		return weidu;
	}

	public void setWeidu(double weidu) {
		this.weidu = weidu;
	}

	public double getJingdu() {
		return jingdu;
	}

	public void setJingdu(double jingdu) {
		this.jingdu = jingdu;
	}

	public String getLocation() {
		return location;
	}

	public void setLocation(String location) {
		this.location = location;
	}

	@Override
	public void onCreate() {
		super.onCreate();
		sp = Util.getPreference(this);
		persons = new Gson().fromJson(sp.getString("person", ""),
				new TypeToken<List<Person>>() {
				}.getType());
		if (persons == null) {
			persons = new ArrayList<Person>();
		}

		isShakeOpen = sp.getBoolean("isshakeable2", false);
		if (isShakeOpen) {
			startService(new Intent(this, HelpService.class));
		}
	}

	public void setShakeOpen(boolean isOpen) {
		this.isShakeOpen = isOpen;
		sp.edit().putBoolean("isshakeable2", isOpen).commit();
	}

	public boolean isShakeOpen() {
		return isShakeOpen;
	}

	public List<Person> getPersons() {
		return persons;
	}

	public void setPersons(List<Person> persons) {
		this.persons = persons;
	}

	private void savePersons() {
		SharedPreferences sp = Util.getPreference(this);
		sp.edit().putString("person", new Gson().toJson(persons)).commit();
	}

	public void addPerson(Person person) {
		for (Person temp : persons) {
			if (temp.equals(person)) {
				temp.updateData(person);
				savePersons();
				return;
			}
		}
		persons.add(person);
		savePersons();
	}

	public Person findPerson(String name, String tel) {
		Person newperson = new Person();
		newperson.setName(name);
		newperson.setTel(tel);
		for (Person temp : persons) {
			if (temp.equals(newperson)) {
				return temp;
			}
		}
		return null;
	}

	public void deletPerson(Person person) {
		for (Person temp : persons) {
			if (temp.equals(person)) {
				persons.remove(temp);
				savePersons();
				return;
			}
		}
	}

	public void cleanPersonPhone() {
		for (Person temp : persons) {
			temp.setPhone(false);
		}
	}

	public void insteadPerson(Person person) {
		for (Person temp : persons) {
			if (temp.getName().equals("")) {
				temp.updateData(person);
				savePersons();
				return;
			}
		}
	}

	public boolean JudgeHavePeople(Person person) {
		for (Person temp : persons) {
			if (temp.equals(person)) {
				temp.updateData(person);
				savePersons();
				return true;
			}
		}
		return false;
	}

}